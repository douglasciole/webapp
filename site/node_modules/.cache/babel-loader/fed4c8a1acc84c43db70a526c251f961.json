{"ast":null,"code":"var _jsxFileName = \"/Users/douglas/Desktop/Projects/affitto/site/src/components/TextField.js\";\nimport React from 'react';\nimport '../css/components/TextField.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { update_form_field } from '../actions/signup';\nexport default (props => {\n  const signupForm = useSelector(state => state.form);\n  const dispatch = useDispatch();\n\n  function parseDate(str) {\n    var m = str.match(/[0-9]{2}[/][0-9]{2}[/][0-9]{4}$/);\n    return m;\n  }\n\n  const dateMask = obj => {\n    var v = obj.value;\n\n    if (v.match(/^\\[1-9]{2}$/) !== null) {\n      obj.value = v + '/';\n    } else if (v.match(/^\\[1-9]{2}\\/\\[1-9]{2}$/) !== null) {\n      obj.value = v + '/';\n    }\n\n    obj.value = parseDate(v);\n  };\n\n  let inputProperties = {};\n\n  if (props.linked) {\n    inputProperties.value = signupForm[props.linked];\n\n    inputProperties.onChange = event => {\n      dispatch(update_form_field(props.linked, event.target.value));\n    };\n  }\n\n  if (props.type == \"date\") {\n    inputProperties.placeholder = \"dd/mm/yyyy\";\n\n    inputProperties.onKeyUp = event => {\n      dateMask(event.target);\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"menuRow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    lg: 2,\n    sm: 1,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    lg: 6,\n    sm: 10,\n    xs: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"textDIsplay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, props.label, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, inputProperties, {\n    type: props.type == \"password\" ? \"password\" : \"input\",\n    maxLength: props.maxLength,\n    readOnly: props.readOnly,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    lg: 4,\n    sm: 1,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/douglas/Desktop/Projects/affitto/site/src/components/TextField.js"],"names":["React","Container","Row","Col","useSelector","useDispatch","update_form_field","props","signupForm","state","form","dispatch","parseDate","str","m","match","dateMask","obj","v","value","inputProperties","linked","onChange","event","target","type","placeholder","onKeyUp","label","maxLength","readOnly"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../css/components/TextField.css'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { update_form_field } from '../actions/signup';\n\nexport default (props) => {\n    const signupForm = useSelector(state => state.form);\n    const dispatch = useDispatch();\n\n    function parseDate(str) {\n        var m = str.match(/[0-9]{2}[/][0-9]{2}[/][0-9]{4}$/);\n        return m;\n    }\n\n    const dateMask = (obj) => {\n        var v = obj.value;\n        if (v.match(/^\\[1-9]{2}$/) !== null) {\n            obj.value = v + '/';\n        } else if (v.match(/^\\[1-9]{2}\\/\\[1-9]{2}$/) !== null) {\n            obj.value = v + '/';\n        }\n\n        obj.value = parseDate(v);\n    }\n\n    let inputProperties = {}\n\n    if (props.linked) {\n        inputProperties.value = signupForm[props.linked];\n        inputProperties.onChange = (event) => {dispatch(update_form_field(props.linked, event.target.value))};\n    }\n\n    if (props.type == \"date\") {\n        inputProperties.placeholder=\"dd/mm/yyyy\";\n        inputProperties.onKeyUp=(event) => {dateMask(event.target)};\n    }\n\n    return (\n    <Row className=\"menuRow\">\n        <Col md={2} lg={2} sm={1} xs={1}></Col>\n        <Col md={6} lg={6} sm={10} xs={10}>\n            <label className=\"textDIsplay\">\n                {props.label}\n                <input {...inputProperties} type={(props.type == \"password\")?\"password\":\"input\"} maxLength={props.maxLength} readOnly={props.readOnly}/>\n            </label>\n        </Col>\n        <Col md={4} lg={4} sm={1} xs={1}></Col>\n    </Row>\n    );\n}"]},"metadata":{},"sourceType":"module"}