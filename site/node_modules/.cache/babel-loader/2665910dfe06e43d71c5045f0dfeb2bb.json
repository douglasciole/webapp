{"ast":null,"code":"import React from'react';import BigDisplay from'../components/BigDisplay';import Content from'../components/Content';import TextField from'../components/TextField';import Button from'../components/Button';import Error from'../components/Error';import Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';export default(function(props){var validation=function validation(form){if(form.Login_Email!=\"\"&&form.Login_Password!=\"\"&&form.Login_Password_Re){if(form.Login_Password==form.Login_Password_Re){return{success:true};}else{return{success:false,message:\"Password and Re-enter Password have to be equal.\",page:\"ACCOUNT\"};}}return{success:false,message:\"Sorry. Please enter all fields before proceeding.\",page:\"ACCOUNT\"};};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BigDisplay,{title:\"For starters, let's create login credentials for the Merchant Portal.\",subTitle:\"\"}),/*#__PURE__*/React.createElement(Error,{page:\"accountPage\"}),/*#__PURE__*/React.createElement(Content,null,/*#__PURE__*/React.createElement(TextField,{linked:\"Login_Email\",label:\"Email\"}),/*#__PURE__*/React.createElement(TextField,{type:\"password\",linked:\"Login_Password\",label:\"Password\"}),/*#__PURE__*/React.createElement(TextField,{type:\"password\",linked:\"Login_Password_Re\",label:\"Re-enter password\"}),/*#__PURE__*/React.createElement(Row,{className:\"menuRow\"},/*#__PURE__*/React.createElement(Col,{md:2,lg:2,sm:1,xs:1}),/*#__PURE__*/React.createElement(Col,{className:\"padding-l0\",md:6,lg:6,sm:10,xs:10},/*#__PURE__*/React.createElement(Button,{validate:validation,onClick:props.btnNext},\"Next\")),/*#__PURE__*/React.createElement(Col,{md:4,lg:4,sm:1,xs:1}))));});","map":{"version":3,"sources":["/Users/douglas/Desktop/Projects/react/webapp/site/src/pages/AccountInfos.js"],"names":["React","BigDisplay","Content","TextField","Button","Error","Container","Row","Col","props","validation","form","Login_Email","Login_Password","Login_Password_Re","success","message","page","btnNext"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,CAGA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CAEA,eAAe,SAACC,KAAD,CAAW,CACtB,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CACzB,GAAIA,IAAI,CAACC,WAAL,EAAoB,EAApB,EAA0BD,IAAI,CAACE,cAAL,EAAuB,EAAjD,EAAuDF,IAAI,CAACG,iBAAhE,CAAmF,CAC/E,GAAIH,IAAI,CAACE,cAAL,EAAuBF,IAAI,CAACG,iBAAhC,CAAmD,CAC/C,MAAO,CAACC,OAAO,CAAE,IAAV,CAAP,CACH,CAFD,IAEM,CACF,MAAO,CAACA,OAAO,CAAE,KAAV,CAAiBC,OAAO,CAAE,kDAA1B,CAA8EC,IAAI,CAAE,SAApF,CAAP,CACH,CACJ,CACD,MAAO,CAACF,OAAO,CAAE,KAAV,CAAiBC,OAAO,CAAE,mDAA1B,CAA+EC,IAAI,CAAE,SAArF,CAAP,CACH,CATD,CAWA,mBACA,qDACI,oBAAC,UAAD,EACI,KAAK,CAAC,uEADV,CAEI,QAAQ,CAAC,EAFb,EADJ,cAKI,oBAAC,KAAD,EAAO,IAAI,CAAC,aAAZ,EALJ,cAMI,oBAAC,OAAD,mBACI,oBAAC,SAAD,EAAW,MAAM,CAAC,aAAlB,CAAgC,KAAK,CAAC,OAAtC,EADJ,cAEI,oBAAC,SAAD,EAAW,IAAI,CAAC,UAAhB,CAA2B,MAAM,CAAC,gBAAlC,CAAmD,KAAK,CAAC,UAAzD,EAFJ,cAGI,oBAAC,SAAD,EAAW,IAAI,CAAC,UAAhB,CAA2B,MAAM,CAAC,mBAAlC,CAAsD,KAAK,CAAC,mBAA5D,EAHJ,cAKI,oBAAC,GAAD,EAAK,SAAS,CAAC,SAAf,eACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,EAAE,CAAE,CAAhB,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,EADJ,cAEI,oBAAC,GAAD,EAAK,SAAS,CAAC,YAAf,CAA4B,EAAE,CAAE,CAAhC,CAAmC,EAAE,CAAE,CAAvC,CAA0C,EAAE,CAAE,EAA9C,CAAkD,EAAE,CAAE,EAAtD,eACI,oBAAC,MAAD,EAAQ,QAAQ,CAAEP,UAAlB,CAA8B,OAAO,CAAED,KAAK,CAACS,OAA7C,SADJ,CAFJ,cAKI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,EAAE,CAAE,CAAhB,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,EALJ,CALJ,CANJ,CADA,CAsBH,CAlCD","sourcesContent":["import React from 'react'\nimport BigDisplay from '../components/BigDisplay'\nimport Content from '../components/Content'\nimport TextField from '../components/TextField'\nimport Button from '../components/Button'\nimport Error from '../components/Error'\n\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nexport default (props) => {\n    const validation = (form) => {\n        if (form.Login_Email != \"\" && form.Login_Password != \"\" && form.Login_Password_Re) {\n            if (form.Login_Password == form.Login_Password_Re) {\n                return {success: true};\n            }else {\n                return {success: false, message: \"Password and Re-enter Password have to be equal.\", page: \"ACCOUNT\"};\n            }\n        }\n        return {success: false, message: \"Sorry. Please enter all fields before proceeding.\", page: \"ACCOUNT\"};\n    }\n\n    return (\n    <>\n        <BigDisplay\n            title=\"For starters, let's create login credentials for the Merchant Portal.\"\n            subTitle=\"\"\n        />\n        <Error page=\"accountPage\" />\n        <Content>\n            <TextField linked=\"Login_Email\" label=\"Email\" />\n            <TextField type=\"password\" linked=\"Login_Password\" label=\"Password\" />\n            <TextField type=\"password\" linked=\"Login_Password_Re\" label=\"Re-enter password\" />\n\n            <Row className=\"menuRow\">\n                <Col md={2} lg={2} sm={1} xs={1}></Col>\n                <Col className=\"padding-l0\" md={6} lg={6} sm={10} xs={10}>\n                    <Button validate={validation} onClick={props.btnNext}>Next</Button>\n                </Col>\n                <Col md={4} lg={4} sm={1} xs={1}></Col>\n            </Row>\n      </Content>\n    </>\n    );\n}"]},"metadata":{},"sourceType":"module"}